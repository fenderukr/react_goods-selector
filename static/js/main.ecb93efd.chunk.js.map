{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearCartHandler","setState","name","this","prevState","className","type","onClick","map","good","selectGoodHandler","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAKMA,EAAQ,CACZ,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAmB,CACjBC,aAAc,OAFlB,EAKEC,iBAAmB,WACjB,EAAKC,SAAS,CAAEF,aAAc,QANlC,uDASE,SAAkBG,GAChBC,KAAKF,UAAS,SAACG,GAAD,MAA2B,CACvCL,aAAcK,EAAUL,eAAiBG,EACrCA,EACA,WAbV,oBAiBE,WAAU,IAAD,OACP,OACE,uBAAMG,UAAU,oBAAhB,UACGF,KAAKL,MAAMC,aACV,qBAAIM,UAAU,sCAAd,UACGF,KAAKL,MAAMC,aACX,IAFH,cAIE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASJ,KAAKH,sBAIlB,oBAAIK,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACC,GAAD,OACT,qBAEE,UAAQ,OACRJ,UACE,EAAKP,MAAMC,eAAiBU,EACxB,+BACA,GANR,UASE,6BACE,wBACE,UAAS,EAAKX,MAAMC,eAAiBU,EACjC,eACA,YACJH,KAAK,SACLD,UAAS,iBACP,EAAKP,MAAMC,eAAiBU,GAAQ,WAEtCF,QAAS,kBAAM,EAAKG,kBAAkBD,IARxC,SAUG,EAAKX,MAAMC,eAAiBU,EAAO,IAAM,QAG9C,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAvBEA,iBAxCrB,GAAyBE,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecb93efd.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport 'bulma/css/bulma.css';\nimport React from 'react';\nimport './App.scss';\n\nconst goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype StateType = {\n  selectedGood: string | null,\n};\n\nexport class App extends React.Component {\n  state: StateType = {\n    selectedGood: 'Jam',\n  };\n\n  clearCartHandler = () => {\n    this.setState({ selectedGood: null });\n  };\n\n  selectGoodHandler(name: string) {\n    this.setState((prevState: StateType) => ({\n      selectedGood: prevState.selectedGood !== name\n        ? name\n        : null,\n    }));\n  }\n\n  render() {\n    return (\n      <main className=\"section container\">\n        {this.state.selectedGood ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {this.state.selectedGood}\n            {' '}\n            is selected\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.clearCartHandler}\n            />\n          </h1>\n        ) : (\n          <h1 className=\"title\">No goods selected</h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={\n                  this.state.selectedGood === good\n                    ? 'has-background-success-light'\n                    : ''\n                }\n              >\n                <td>\n                  <button\n                    data-cy={this.state.selectedGood === good\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                    type=\"button\"\n                    className={`button ${\n                      this.state.selectedGood === good && 'is-info'\n                    }`}\n                    onClick={() => this.selectGoodHandler(good)}\n                  >\n                    {this.state.selectedGood === good ? '-' : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}